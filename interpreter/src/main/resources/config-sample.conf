// config sample
chainId = "testNet"

// as a core-node
core-node {
  // functioning mode, full or semi
  mode = "full"

  // consensus network config
  consensus-network {
    host = "192.168.1.11"
    port = 9400

    // seeds, empty array indicates that it's a seed node
    // seeds = []
    seeds = []

    // bound account
    account  {
      encryptedPrivateKey = "4CB6xV7hMbrY631nifQS2T8sm7b4kZ3PxY9GmGNUYTHvKUyhfLtPiUr"
      publicKey = "28ZX3S6nQyk372CMUotnby35hWTkeqMToict9AQrMM4Bp"
      iv = "LK6SqmDKvVT"
      id = "15s23G19xRwu687ZFzXw7WyNd2AZQdxoUj"
      secretKey = "9m6cRtuhXP1jJS5mnj5QxbGahoXqzbV5QPp5vsma4k5F"
    }

    // scp protocol config
    scp  {
      // current node id is the bound account's public key.
      quorums = {
        // quorum threashold
        threshold = 1

        // quorum members, an arry of node id (bound account's public key)
        validators = ["28ZX3S6nQyk372CMUotnby35hWTkeqMToict9AQrMM4Bp","p5uk2L7imv3Yfr32seuC7qkQCiQooFBBxPYkmPENo18h"]

        // nested quorums
        // the element of a nested quorum should not have innerSets
        innerSets = [
          {
            threshold = 1
            validators = ["", ""]
          },
          {
            threshold = 1
            validators = ["", ""]
          }
        ]
      }

      // max timeout seconds
      maxTimeoutSeconds = 1800

      // max nominating times for every slotIndex
      maxNominatingTimes = 50

      // millis to broadcast all of nominate and ballot message
      broadcastTimeout = 2000
    }
  }

  // if mode is full-functioning, we start a application network
  application-network {
    host = "192.168.1.11"
    port = 9500

    // seeds, empty array indicates that it's a seed node
    seeds = []
    // seeds = []

    // bound account, maybe same as consensus-network's
    account = {
      encryptedPrivateKey = "4CB6xV7hMbrY631nifQS2T8sm7b4kZ3PxY9GmGNUYTHvKUyhfLtPiUr"
      publicKey = "28ZX3S6nQyk372CMUotnby35hWTkeqMToict9AQrMM4Bp"
      iv = "LK6SqmDKvVT"
      id = "15s23G19xRwu687ZFzXw7WyNd2AZQdxoUj"
      secretKey = "9m6cRtuhXP1jJS5mnj5QxbGahoXqzbV5QPp5vsma4k5F"
    }
  }
}

// as a edge-node
edge-node {
  client-network {
    http-json-rpc {
      host = "192.168.1.11"
      port = 9600

      // ssl not support now
    }

    // maybe support other network, such as gRPC
  }

  // a p2p network, connect with core-node to transmit application request and response
  application-network {
    host = "192.168.1.11"
    port = 9501

    // seeds, empty array indicates that it's a seed node
    // seeds = []
    seeds = ["192.168.1.11:9500"]

    // bound account, maybe same as consensus-network's
    account = {
      encryptedPrivateKey = "4CB6xV7hMbrY631nifQS2T8sm7b4kZ3PxY9GmGNUYTHvKUyhfLtPiUr"
      publicKey = "28ZX3S6nQyk372CMUotnby35hWTkeqMToict9AQrMM4Bp"
      iv = "LK6SqmDKvVT"
      id = "15s23G19xRwu687ZFzXw7WyNd2AZQdxoUj"
      secretKey = "9m6cRtuhXP1jJS5mnj5QxbGahoXqzbV5QPp5vsma4k5F"
    }
  }
}
