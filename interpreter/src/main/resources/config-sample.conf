// config sample
chainId = ""

// as a core-node
core-node {
  // functioning mode, full or semi
  mode = ""

  // consensus network config
  consensus-network {
    host = ""
    port = 9400

    // seeds, empty array indicates that it's a seed node
    // seeds = []
    seeds = []

    // bound account
    account  {
      id = ""
      publicKey = ""
      encryptedPrivateKey = ""
      iv = ""
    }

    // scp protocol config
    scp  {
      // current node id is the bound account's public key.
      quorums = {
        // quorum threashold
        threshold = 3

        // quorum members, an arry of node id (bound account's public key)
        validators = []

        // nested quorums
        // the element of a nested quorum should not have innerSets
        innerSets = [
          {
            threshold = 1
            validators = ["0x10", "0x11"]
          },
          {
            threshold = 1
            validators = ["0x02", "0x21"]
          }
        ]
      }

      // max timeout seconds
      maxTimeoutSeconds = 1800

      // max nominating times for every slotIndex
      maxNominatingTimes = 50
    }
  }

  // if mode is full-functioning, we start a application network
  application-network {
    host = ""
    port = 9500

    // seeds, empty array indicates that it's a seed node
    seeds = [""]
    // seeds = ["127.0.0.1:9700"]

    // bound account, maybe same as consensus-network's
    account = {
      id = ""
      publicKey = ""
      encryptedPrivateKey = ""
      iv = ""
    }
  }
}

// as a edge-node
edge-node {
  client-network {
    http-json-rpc {
      host = ""
      port = 8080

      // ssl not support now
    }

    // maybe support other network, such as gRPC
  }

  // a p2p network, connect with core-node to transmit application request and response
  application-network {
    host = ""
    port = 9501

    // seeds, empty array indicates that it's a seed node
    // seeds = []
    seeds = [""]

    // bound account, maybe same as consensus-network's
    account = {
      id = ""
      publicKey = ""
      encryptedPrivateKey = ""
      iv = ""
    }
  }
}